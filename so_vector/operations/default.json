{
  "name": "dup-vec-pipeline-op",
  "operation-type": "raw-request",
  "method": "PUT",
  "path": "/_ingest/pipeline/dup_vec",
  "body": {
    "processors": [
      {
        "script": {
          "source": "if (ctx.titleVector != null) { def noisy = new ArrayList(); for (v in ctx.titleVector) { noisy.add(v + (Math.random() - 0.5) * 0.01); } ctx.titleVectorRandom = noisy; }"
        }
      }
    ]
  }
},
{
  "name": "script-score-query-css",
  "operation-type": "search",
  "param-source": "knn-param-source",
  "exact": true,
  "k": 10,
  "filter": {
    "terms": {
      "tags": [
        "css"
      ]
    }
  }
},
{
  "name": "script-score-query-javascript",
  "operation-type": "search",
  "param-source": "knn-param-source",
  "exact": true,
  "k": 10,
  "filter": {
    "terms": {
      "tags": [
        "javascript"
      ]
    }
  }
},
{
  "name": "script-score-query-concurrency",
  "operation-type": "search",
  "param-source": "knn-param-source",
  "exact": true,
  "k": 10,
  "filter": {
    "terms": {
      "tags": [
        "concurrency"
      ]
    }
  }
},
{
  "name": "script-score-query-ccs",
  "operation-type": "search",
  "param-source": "knn-param-source",
  "exact": true,
  "k": 10,
  "filter": {
    "terms": {
      "tags": [
        "ccs"
      ]
    }
  }
},
{
  "name": "script-score-query-acceptedAnswerId",
  "operation-type": "search",
  "param-source": "knn-param-source",
  "exact": true,
  "k": 10,
  "filter": {
    "exists": {
      "field": "acceptedAnswerId"
    }
  }
},
{
  "name": "script-score-query-java",
  "operation-type": "search",
  "param-source": "knn-param-source",
  "exact": true,
  "k": 10,
  "filter": {
    "terms": {
      "tags": [
        "java"
      ]
    }
  }
},
{
  "name": "script-score-query-match-all",
  "operation-type": "search",
  "param-source": "knn-param-source",
  "exact": true,
  "k": 10
}